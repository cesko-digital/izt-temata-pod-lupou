@using System.Linq.Expressions
@using TemataPodLupou.Web.Controllers
@inherits UmbracoViewPage<SubmissionController.ViewModel>

@{
    var page = (SubmissionWidget)UmbracoContext.PublishedRequest.PublishedContent;
    var regionSelectItems = page.RegionDropdownValues.Select(x => new SelectListItem {
        Text = x
    }).ToList();
}

@functions {
    private string HelperId<TValue>(Expression<Func<SubmissionController.ViewModel, TValue>> expression) {
        return Html.IdFor(expression) + "Help";
    }
    
    private object InputAttrs<TValue>(Expression<Func<SubmissionController.ViewModel, TValue>> expression)
    {
        return new
        {
            aria_describedby = HelperId(expression),
            @class = "form-control"
        };
    }

    private IHtmlString HelpTextFor<TValue>(Expression<Func<SubmissionController.ViewModel, TValue>> expression, string helpText)
    {
        return Html.Wrap("div", helpText, new
        {
            id = HelperId(expression),
            @class = "form-text"
        });
    }
}

@using (Html.BeginUmbracoForm<SubmissionController>(nameof(SubmissionController.HandleSubmission)))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()
    
    <div class="mb-4">
        <label for="@Html.IdFor(x => x.Title)" class="form-label">@page.TitleFieldCaption</label>
        @Html.TextBoxFor(x => x.Title, InputAttrs(x => x.Title))
        @HelpTextFor(x => x.Title, page.TitleFieldHelpText)
    </div>

    <div class="mb-4">
        <label for="@Html.IdFor(x => x.Reason)" class="form-label">@page.ReasonFieldCaption</label>
        @Html.TextAreaFor(x => x.Reason, InputAttrs(x => x.Reason))
        @HelpTextFor(x => x.Reason, page.ReasonFieldHelpText)
    </div>
    
    <div class="mb-4">
        <label for="@Html.IdFor(x => x.Description)" class="form-label">@page.DescriptionFieldCaption</label>
        @Html.TextAreaFor(x => x.Description, InputAttrs(x => x.Description))
        @HelpTextFor(x => x.Description, page.DescriptionFieldHelpText)
    </div>
    
    <div class="mb-4">
        <label for="@Html.IdFor(x => x.Region)" class="form-label">@page.RegionFieldCaption</label>
        @Html.DropDownListFor(x => x.Region, regionSelectItems, new { @class = "form-select" })
    </div>
    
    <div class="mb-4">
        <label for="@Html.IdFor(x => x.File)" class="form-label">@page.FileFieldCaption</label>
        <input type="file" class="form-control form-control-lg" name="@Html.NameFor(x => x.File)" aria-describedby="@HelperId(x => x.File)">
        @HelpTextFor(x => x.File, page.FileFieldHelpText)
    </div>
    
    <div class="mb-4">
        <label for="@Html.IdFor(x => x.Email)" class="form-label">@page.EmailFieldCaption</label>
        @Html.TextBoxFor(x => x.Email, InputAttrs(x => x.Email))
        @HelpTextFor(x => x.Email, page.EmailFieldHelpText)
    </div>
    
    <button type="submit" class="btn btn-main mb-2">
        @page.SubmitButtonText
    </button>

    <p class="form-text">
        @page.TermsAndConditions
    </p>
}